name: Build UIBase

on:
  push:
    branches: [ dev/gh-workflow-tests ]
    tags:
      - "*"
  pull_request:
    types: [opened, synchronize, reopened]

#env:
#  VCPKG_BINARY_SOURCES: clear;x-azblob,${{ vars.AZ_BLOB_VCPKG_URL }},${{ secrets.AZ_BLOB_SAS }},readwrite

jobs:
  build:
    runs-on: ubuntu-24.04
    container: ubuntu:questing
    steps:
      - name: Install updates
        run: apt-get update && apt-get upgrade -y

      - name: Install build dependencies
        run: |
          apt-get install -y \
          build-essential cmake curl git ninja-build pkg-config sudo tar unzip wget zip

      - name: Install vcpkg
        run: |
          cd /opt/
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg integrate install

      - name: Create workspace dir
        run: mkdir -p ${{ github.workspace }}

      - name: Configure UIBase
        id: configure-uibase
        uses: Kaedras/build-with-mob-action@dev/bash
        with:
          # skip build because we are going to build both Debug and RelWithDebInfo here
          mo2-skip-build: true
          mo2-owner: Kaedras

      # build both Debug and RelWithDebInfo for package
      - name: Build UI Base
        working-directory: ${{ steps.configure-uibase.outputs.working-directory }}
        run: |
          cmake --build build --config Debug --target uibase-tests --verbose
          cmake --build build --config RelWithDebInfo --target uibase-tests --verbose

      - name: Test UI Base
        working-directory: ${{ steps.configure-uibase.outputs.working-directory }}
        run: |
          ctest --test-dir build -C Debug --output-on-failure
          ctest --test-dir build -C RelWithDebInfo --output-on-failure

      - name: Install UI Base
        working-directory: ${{ steps.configure-uibase.outputs.working-directory }}
        run: |
          cmake --install build --config Debug
          cmake --install build --config RelWithDebInfo

      # this tests that UI Base can be properly used as a CMake package
      - name: Test UI Base package
        run: |
          cmake -B build_tests . "-DCMAKE_PREFIX_PATH=$QT_ROOT_DIR;${{ github.workspace }}/install/lib/cmake/"
          cmake --build build_tests --config Debug
          cmake --build build_tests --config Release
          cmake --build build_tests --config RelWithDebInfo
        working-directory: ${{ steps.configure-uibase.outputs.working-directory }}/tests/cmake

      - name: Upload UI Base artifact
        uses: actions/upload-artifact@master
        with:
          name: uibase
          path: ./install

  publish:
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: uibase
          path: ./install

      - name: Create UI Base archives
        run: |
          7z a uibase_${{ github.ref_name }}.7z ./install/*

      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release create --draft=false --notes="${{ github.ref_name }}" "${{ github.ref_name }}" ./uibase_${{ github.ref_name }}.7z
